action.analysis.noun=Analysis
action.analyze.verb=Analyze
action.analyzing.cyclic.dependencies.in.scope=Cyclic Dependencies of {0}
action.backward.dependency.analysis=Backward Dependency Analysis
action.close.dependency.description=Close Dependency Viewer
action.close.modules.dependencies.description=Close Modules Dependencies Viewer
action.cyclic.dependency.title=Cyclic Dependency Analysis
action.edit.rules.description=Edit Dependency Rules
action.edit.rules=Edit Rules
action.flatten.packages=Flatten Packages
action.forward.dependency.analysis=Dependency Analysis
action.group.by.scope.type.description=Group by Scope Type (production, test, libraries)
action.group.by.scope.type=Group by Scope Type
action.module.dependencies.direction=Dependencies Direction
action.rerun.dependency=Rerun Dependency Analysis
action.select.in.left.tree.description=Select in left tree (to browse dependencies from)
action.select.in.left.tree=Select in Left Tree
action.show.files.description=Show/Hide Files
action.show.files=Show Files
action.show.illegals.only.description=Show only files that have illegal dependencies
action.show.illegals.only=Show Illegals Only
action.show.modules.description=Show/Hide Modules
action.show.modules=Show Modules
analysis.scope.title={0} scope
analyzing.project=Analyzing Project
backward.dependencies.progress.text=Analyzing Backward Dependencies
backward.dependencies.toolwindow.title=Backward Dependencies of {0}
backward.dependencies.usage.view.initial.text=Select where to search in right tree and what to search in left tree.
backward.dependencies.usage.view.root.node.text=Usages of the left tree scope selection in the right tree scope selection
checking.class.files=Checking Class Files
cyclic.dependencies.progress.text=Building dependencies graph
cyclic.dependencies.scope.dialog.module.button={0} &module ''{1}''
cyclic.dependencies.scope.dialog.project.button={0} the whole &project
cyclic.dependencies.scope.dialog.title=Specify {0} Scope
cyclic.dependencies.tree.cycle.node.text=cycle
cyclic.dependencies.usage.view.initial.text=Select package to analyze from the left tree
cyclic.dependencies.usage.view.root.node.text=Usages of package ''{0}'' in package ''{1}''
dependencies.libraries.node.text=Libraries
dependencies.tree.node.default.package.abbreviation=<default package>
dependency.configurable.allow.table.column1=Allow usages of
dependency.configurable.allow.table.column2=only in
dependency.configurable.deny.table.column1=Deny usages of
dependency.configurable.deny.table.column2=in
dependency.configurable.display.name=Dependency Validation
error.packageset.common.expectations=(test|lib|src)[modulename] expected before :
error.packageset.pattern.expectations=Package pattern expected
error.packageset.position.parsing.error={0} at position {1}
error.packageset.rparen.expected=')' expected
error.packageset.token.expectations=Unexpected ''{0}''
find.dependencies.progress.text=Searching for usages in: {0}
forward.dependencies.usage.view.initial.text=Select where to search in left tree and what to search in right tree.
forward.dependencies.usage.view.root.node.text=Usages of the right tree scope selection in the left tree scope selection
mark.dependency.illegal.text=Mark Illegal
module.dependencies.cycle.node.text=Cycle{0}
module.dependencies.scope.dialog.module.button=Inspect &module ''{0}''
module.dependencies.scope.dialog.project.button=Inspect the whole &project
module.dependencies.scope.dialog.title=Specify Analysis Scope
module.dependencies.toolwindow.title={0}
no.dependencies.found.message=No dependencies of {0} on {1} found.
package.dependencies.build.process.title=Scanning Packages
package.dependencies.build.progress.text=Scanning packages
package.dependencies.library.node.text=Library Classes
package.dependencies.node.items.count= {0, choice, 1#1 entry|2#{0, number} entries}
package.dependencies.on.toolwindow.title=Dependencies of {0} on {1}
package.dependencies.production.node.text=Production Classes
package.dependencies.progress.text=Analyzing package dependencies
package.dependencies.progress.title=Analyzing Dependencies
package.dependencies.test.node.text=Test Classes
package.dependencies.toolwindow.title=Dependencies of {0}
project.is.out.of.date=Project Is Out Of Date
recompile.confirmation.message=Project class files are out of date. \nDo you want to compile a project before continuing DSM analysis?\nThe refusal to do it might result in incomplete or incorrect data.
scanning.scope.progress.title=Scanning scope ...
scope.directory=Directory ''{0}''
scope.display.name.allow.scope=Allow usages of scope ''{0}'' in scope ''{1}''
scope.display.name.deny.scope=Deny usages of scope ''{0}'' in scope ''{1}''
scope.file=File ''{0}''
scope.module.list={1, choice, 1#Module|2#Modules} {0}
scope.option.custom=&Custom scope
scope.option.include.test.sources=Include &test sources
scope.option.module.with.mnemonic=&Module ''{0}''
scope.option.module=Module ''{0}''
scope.option.uncommited.files.all.changelists.choice=All
scope.option.uncommited.files=&Uncommitted files
scope.option.whole.project=Whole &project
scope.package=Package {0}
scope.project=Project ''{0}''
scope.selected.files=Selected files
scope.virtual.files=selection
skip.import.statements.checkbox.title=Skip import statements
specify.analysis.scope=Specify {0} Scope
status.bar.no.rule.violation.message=No rules are violated
status.bar.rule.violation.message=The following rule{0, choice, 1# is|2#s are} violated: {1}
unknown.node.text=<unknown>
update.module.tree.progress.text=Process module ''{0}'' cycles
update.module.tree.progress.title=Update modules tree
usage.view.canceled=Canceled
